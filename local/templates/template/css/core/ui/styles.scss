@use "mixins" as ui;

.Heading1 {
  @include ui.Heading1;
}

.Heading2 {
  @include ui.Heading2;
}

.Heading3 {
  @include ui.Heading3;
}

.Heading4 {
  @include ui.Heading4;
}

.Heading5 {
  @include ui.Heading5;
}

.Heading6 {
  @include ui.Heading6;
}

.container {
  @include ui.container;
  max-width: var(--container-width);
  padding: var(--container-padding);
}

.container-big {
  @include ui.container;
  max-width: var(--container-big-width);
  padding: var(--container-padding);
}

.content {
  @include ui.content;
}

.Title24px {
  @include ui.Title24px;
}

.Title20px {
  @include ui.Title20px;
}

.Title18px {
  @include ui.Title18px;
}

.Descriptor20px {
  @include ui.Descriptor20px;
}

.Descriptor18px {
  @include ui.Descriptor18px;
}

.Text16px {
  @include ui.Text16px;
}

.Text14px {
  @include ui.Text14px;
}

.Text12px {
  @include ui.Text12px;
}

.Text10px {
  @include ui.Text10px;
}

.Link16px {
  @include ui.Link16px;
}

.arrow-round {
  @include ui.arrow-round;
}

.arrow {
  @include ui.arrow;
}

.top {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 20px;
  padding-bottom: 36px;
  @include ui.sm-block {
    padding-bottom: 15px;
  }


  &__left {

  }

  &__title {

  }

  &__right {
    display: flex;
    align-items: center;
    gap: 30px;
  }

  &__all {
    color: var(--Grey-Text, #9C9C9C);
    text-decoration-line: underline;
    @include ui.tr;

    &:hover {
      @media (hover: hover) and (pointer: fine) {
        color: var(--Red);
      }
    }

    &:active {
      color: var(--Red-2, #970704);
    }
  }

  &__nav {
    display: flex;
    gap: 12px;
    @include ui.sm-block {
      display: none;
    }
  }

  &__nav-item {
  }


}

.btn {
  @include ui.btn;
  border-radius: 100vmax;
  border: 1px solid var(--Black, #2D2D2D);
  color: var(--Black, #2D2D2D);
  @include ui.tr;

  &:hover {
    @media (hover: hover) and (pointer: fine) {
      color: var(--Red);
      border-color: var(--Red);
    }
  }

  &:active {
    background-color: var(--Red);
    color: var(--White) !important;
    border-color: var(--Red);
  }

  &--white {
    border: 1px solid var(--White);
    color: var(--White);
  }

  &--red {
    border: 1px solid var(--Red);
    color: var(--Red);

    &:hover {
      @media (hover: hover) and (pointer: fine) {
        color: var(--White);
        border-color: var(--Red);
        background: var(--Red);
      }
    }
  }

}

.btn-text {
  @include ui.btn;
  @include ui.Text16px;
}

.btn-phone {
  @include ui.btn;
  @include ui.Phone;
  gap: 12px;
  padding: 0;
  white-space: nowrap;
  @include ui.tr;

  svg {
    flex-shrink: 0;
  }

  &:hover {
    @media (hover: hover) and (pointer: fine) {
      color: var(--Red);
    }
  }
}

.btn-double {
  @include ui.Text_button;
  --color: var(--Black, #2D2D2D);
  --border-color: var(--Black, #2D2D2D);

  display: flex;
  flex-wrap: nowrap;
  gap: 4px;

  &--catalog {
    label {
      display: flex;
      width: 100%;
      height: 35px;

      input {
        display: none;

        &:checked + span {
          background-color: var(--Red);
          --border-color: var(--Red);
          --color: var(--White);
        }
      }

      span {
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        color: var(--color);
        border: 1px solid var(--border-color);
        cursor: pointer;
        border-radius: 0 40px 40px 0;
        @include ui.tr;

        svg {
          transform: translateX(-2px);

          path {
            fill: currentColor;
          }
        }
      }
    }
  }

  a, button {
    width: 100%;
    height: 35px;
    display: flex;
    justify-content: center;
    align-items: center;
    color: var(--color);
    border: 1px solid var(--border-color);
    cursor: pointer;
    @include ui.tr;

    svg {
      path {
        fill: currentColor;
      }
    }
  }

  button {
    &:hover {
      @media (hover: hover) and (pointer: fine) {
        --border-color: var(--Red, #D4302E);
        --color: var(--Red, #D4302E);
      }
    }
  }

  a {
    --color: var(--White);
    --border-color: var(--Red);
    background: var(--Red);

    &:hover {
      @media (hover: hover) and (pointer: fine) {
        --border-color: var(--Red-2);
        background: var(--Red-2);
      }
    }
  }

  &.in-cart {
    .btn-double__left {
      a {
        display: flex;
      }

      button {
        display: none;
      }
    }
  }

  &__left {
    flex-grow: 141;


    a, button {
      border-radius: 40px 0 0 40px;
    }

    a {
      display: none;
    }
  }

  &__right {
    flex-grow: 65;

    a, button {
      border-radius: 0 40px 40px 0;
    }
  }

  label {
    margin: 0;
  }


}

.btn-fill {
  @include ui.btn;
  border-radius: 100vmax;
  border: 1px solid var(--Grey-BG, #F7F7F7);
  background: var(--Grey-BG, #F7F7F7);
  @include ui.tr;

  &:hover {
    @media (hover: hover) and (pointer: fine) {
      background: transparent;
      color: var(--Red);
      border-color: var(--Red);
    }
  }

  &:active {
    background-color: var(--Red);
    color: var(--White) !important;
    border-color: var(--Red);
  }

  &--red {
    border: 1px solid var(--Red);
    background: var(--Red);
    color: var(--White);
    transition: none;

    &:hover {
      @media (hover: hover) and (pointer: fine) {
        background: var(--Red-Gradient, linear-gradient(91deg, #D4302E 0%, #D83635 35.47%, #FF6563 53.48%, #D93735 73%, #D4302E 98.7%));
        color: var(--White);
      }
    }
  }

  &--red2 {
    border: 1px solid var(--Red);
    background: var(--Red);
    color: var(--White);
    transition: var(--transition);

    &:hover {
      @media (hover: hover) and (pointer: fine) {
        background: var(--Red-2);
        border: 1px solid var(--Red-2);
        color: var(--White);
      }
    }
  }
}

.btn-arrow {
  @include ui.btn;
  padding: 0;
  --bgc: var(--Grey-BG, #F7F7F7);
  --color: var(--Grey-Text, #9C9C9C);


  &:hover {
    @media (hover: hover) and (pointer: fine) {
      --bgc: var(--Red);
      --color: var(--White);
    }
  }

  &:active {
    --bgc: var(--Red-2);
    --color: var(--White);
  }

  svg {

    rect {
      transition: fill var(--transition);
      fill: var(--bgc);
    }

    path {
      transition: fill var(--transition);
      fill: var(--color);
    }
  }
}

.btn-gradient {
  height: 37px;
  line-height: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(105.19deg, #B5B5B5 17.43%, #FFFFFF 58.73%, #8E8E8E 89.15%);
  text-align: center;
  font-size: 13px;
  font-weight: 700;
  text-transform: uppercase;
  border: none;
  box-shadow: none;
  border-radius: 0;
  color: var(--Black);
  padding: 0 40px;

  &.disable-button {
    height: 37px;
    border: none;
    background: linear-gradient(105.19deg, #B5B5B5 17.43%, #FFFFFF 58.73%, #8E8E8E 89.15%);
    border-radius: 0;
    color: var(--Black);

    &:hover {
      @media (hover: hover) and (pointer: fine) {
        height: 37px;
        border: none;
        background: linear-gradient(105.19deg, #B5B5B5 17.43%, #FFFFFF 58.73%, #8E8E8E 89.15%);
        border-radius: 0;
        color: var(--Black);
      }
    }
  }

  &:hover {
    @media (hover: hover) and (pointer: fine) {
      background: linear-gradient(105.19deg, #B5B5B5 17.43%, #FFFFFF 58.73%, #8E8E8E 89.15%);
      color: var(--Black);
    }
  }
}

.btn-rectangle {
  @include ui.btn;
  color: var(--White) !important;
  border: 1px solid var(--Red);
  background: var(--Red);
  border-radius: 6px;
  padding: 14px 36px;
  display: inline-flex;
  text-decoration: none !important;
  @include ui.tr;

  @include ui.sm-block {
    font-size: 14px;
    padding: 10px;
  }

  &:hover {
    @media (hover: hover) and (pointer: fine) {
      background: var(--Red-2);
      border-color: var(--Red-2);
    }
  }
}

.ui-hidden {
  display: none;
}

.ui-loading {
  opacity: 0.4;
}

.ui-disabled {
  pointer-events: none;
}

.dn {
  &-md {
    @include ui.md-block {
      display: none;
    }
  }
}

@for $i from 1 through 20 {
  .mt-#{$i}0 {
    margin-top: calc(var(--spacing) * $i) !important;
  }
  .mb-#{$i}0 {
    margin-bottom: calc(var(--spacing) * $i) !important;
  }
}